// Advent of Code 2022 day 09 visualiser

input = [
    'L', 2,
    'R', 2,
    'U', 1,
    'R', 2,
    'U', 2,
    'D', 2,
    'U', 1,
    'L', 1,
    'U', 1,
    'L', 1,
    'D', 1,
    'U', 1,
    'L', 1,
    'R', 1,
    'L', 2,
    'D', 2,
    'R', 1,
    'L', 2,
    'D', 2,
    'L', 2,
    'U', 1,
    'D', 2,
    'R', 1,
    'D', 1,
    'U', 1,
    'D', 1,
    'U', 2,
    'L', 1,
    'U', 2,
    'R', 1,
    'D', 2,
    'L', 1,
    'D', 1,
    'U', 1,
    'L', 1,
    'R', 1,
    'L', 1,
    'U', 2,
    'L', 1,
    'U', 1,
    'L', 2,
    'R', 2,
    'D', 2,
    'U', 2,
    'R', 1,
    'U', 1,
    'D', 2,
    'L', 1,
    'U', 1,
    'D', 2,
    'U', 1,
    'L', 2,
    'U', 1,
    'D', 2,
    'U', 2,
    'L', 1,
    'D', 2,
    'L', 1,
    'U', 1,
    'D', 1,
    'U', 1,
    'D', 2,
    'R', 2,
    'U', 1,
    'L', 1,
    'R', 2,
    'D', 2,
    'R', 1,
    'L', 1,
    'R', 1,
    'D', 1,
    'U', 1,
    'L', 2,
    'U', 1,
    'L', 1,
    'R', 1,
    'D', 2,
    'U', 1,
    'L', 1,
    'D', 2,
    'R', 2,
    'D', 1,
    'U', 1,
    'R', 2,
    'U', 1,
    'D', 1,
    'R', 2,
    'D', 1,
    'R', 1,
    'U', 2,
    'D', 1,
    'L', 2,
    'U', 2,
    'R', 1,
    'L', 1,
    'R', 2,
    'U', 2,
    'L', 2,
    'U', 2,
    'D', 1,
    'U', 1,
    'D', 2,
    'R', 2,
    'U', 2,
    'R', 1,
    'D', 1,
    'R', 2,
    'U', 2,
    'D', 2,
    'U', 1,
    'R', 1,
    'U', 2,
    'D', 3,
    'R', 1,
    'L', 1,
    'D', 3,
    'U', 3,
    'L', 3,
    'D', 2,
    'U', 3,
    'D', 1,
    'R', 2,
    'D', 2,
    'L', 1,
    'U', 3,
    'R', 1,
    'U', 1,
    'R', 3,
    'D', 1,
    'L', 3,
    'R', 1,
    'U', 1,
    'L', 2,
    'D', 2,
    'L', 1,
    'U', 2,
    'D', 1,
    'L', 2,
    'D', 1,
    'U', 1,
    'R', 2,
    'D', 2,
    'U', 2,
    'D', 1,
    'L', 1,
    'R', 2,
    'U', 3,
    'D', 3,
    'U', 2,
    'L', 1,
    'D', 1,
    'U', 2,
    'R', 3,
    'U', 1,
    'D', 1,
    'U', 3,
    'R', 2,
    'U', 3,
    'D', 2,
    'U', 1,
    'R', 1,
    'U', 2,
    'R', 2,
    'U', 1,
    'L', 1,
    'U', 3,
    'L', 2,
    'R', 1,
    'U', 2,
    'D', 3,
    'L', 1,
    'U', 3,
    'D', 3,
    'U', 3,
    'L', 1,
    'D', 2,
    'L', 2,
    'R', 2,
    'D', 3,
    'R', 3,
    'D', 2,
    'R', 2,
    'D', 3,
    'U', 3,
    'R', 1,
    'D', 3,
    'U', 2,
    'R', 3,
    'D', 2,
    'R', 3,
    'U', 1,
    'R', 2,
    'D', 2,
    'U', 3,
    'D', 3,
    'R', 1,
    'U', 3,
    'D', 1,
    'U', 3,
    'D', 3,
    'R', 2,
    'U', 2,
    'D', 1,
    'R', 3,
    'D', 2,
    'U', 3,
    'L', 1,
    'R', 3,
    'L', 2,
    'U', 1,
    'L', 2,
    'U', 1,
    'R', 1,
    'U', 2,
    'R', 3,
    'D', 2,
    'U', 1,
    'L', 3,
    'D', 2,
    'L', 2,
    'D', 3,
    'R', 1,
    'U', 1,
    'R', 1,
    'D', 1,
    'L', 3,
    'D', 2,
    'L', 3,
    'D', 4,
    'R', 2,
    'D', 4,
    'L', 1,
    'D', 4,
    'U', 2,
    'R', 2,
    'U', 3,
    'L', 4,
    'D', 1,
    'R', 1,
    'L', 4,
    'U', 1,
    'D', 3,
    'L', 2,
    'R', 3,
    'U', 1,
    'R', 2,
    'U', 4,
    'D', 1,
    'L', 2,
    'R', 2,
    'D', 4,
    'L', 2,
    'D', 2,
    'R', 1,
    'D', 2,
    'L', 1,
    'U', 4,
    'L', 3,
    'U', 3,
    'R', 4,
    'L', 3,
    'U', 2,
    'D', 3,
    'U', 2,
    'D', 1,
    'L', 2,
    'R', 1,
    'L', 1,
    'R', 1,
    'D', 3,
    'L', 2,
    'D', 3,
    'U', 2,
    'L', 2,
    'R', 1,
    'L', 2,
    'D', 2,
    'R', 1,
    'U', 3,
    'D', 2,
    'L', 1,
    'D', 2,
    'U', 1,
    'L', 1,
    'R', 1,
    'D', 3,
    'U', 2,
    'L', 4,
    'U', 3,
    'R', 4,
    'L', 2,
    'D', 4,
    'R', 3,
    'D', 4,
    'U', 3,
    'R', 3,
    'D', 3,
    'R', 1,
    'U', 1,
    'D', 2,
    'U', 4,
    'D', 4,
    'U', 3,
    'D', 1,
    'L', 4,
    'R', 2,
    'L', 2,
    'U', 3,
    'R', 2,
    'D', 1,
    'R', 3,
    'D', 1,
    'L', 3,
    'R', 2,
    'D', 1,
    'L', 3,
    'U', 3,
    'R', 4,
    'U', 1,
    'L', 2,
    'D', 3,
    'R', 2,
    'U', 2,
    'D', 4,
    'U', 4,
    'D', 4,
    'R', 3,
    'D', 1,
    'U', 4,
    'D', 3,
    'R', 4,
    'U', 1,
    'D', 2,
    'L', 5,
    'R', 3,
    'U', 1,
    'L', 1,
    'D', 4,
    'R', 3,
    'U', 1,
    'R', 3,
    'D', 5,
    'R', 5,
    'D', 2,
    'U', 2,
    'L', 5,
    'R', 2,
    'U', 1,
    'L', 4,
    'R', 4,
    'U', 3,
    'D', 3,
    'U', 1,
    'R', 4,
    'U', 4,
    'R', 4,
    'U', 3,
    'D', 1,
    'L', 1,
    'U', 2,
    'R', 3,
    'L', 5,
    'R', 3,
    'D', 1,
    'R', 2,
    'U', 1,
    'L', 2,
    'D', 5,
    'L', 2,
    'D', 2,
    'U', 4,
    'D', 2,
    'R', 3,
    'L', 5,
    'U', 4,
    'D', 1,
    'L', 3,
    'D', 4,
    'L', 1,
    'D', 4,
    'R', 2,
    'D', 2,
    'R', 3,
    'U', 2,
    'D', 1,
    'R', 1,
    'D', 4,
    'R', 1,
    'D', 5,
    'U', 4,
    'D', 4,
    'R', 1,
    'U', 2,
    'D', 2,
    'L', 2,
    'R', 1,
    'L', 1,
    'D', 5,
    'R', 4,
    'D', 2,
    'U', 3,
    'L', 1,
    'U', 3,
    'L', 4,
    'D', 5,
    'R', 4,
    'U', 3,
    'D', 1,
    'U', 4,
    'L', 2,
    'D', 5,
    'L', 4,
    'R', 4,
    'U', 4,
    'L', 3,
    'U', 5,
    'L', 1,
    'R', 2,
    'L', 1,
    'R', 1,
    'L', 4,
    'R', 3,
    'D', 3,
    'U', 3,
    'L', 3,
    'D', 4,
    'R', 1,
    'L', 2,
    'D', 4,
    'U', 3,
    'L', 5,
    'D', 1,
    'L', 2,
    'U', 2,
    'R', 2,
    'L', 3,
    'R', 4,
    'D', 4,
    'U', 3,
    'D', 5,
    'L', 3,
    'U', 2,
    'L', 2,
    'U', 2,
    'R', 4,
    'L', 1,
    'R', 6,
    'D', 3,
    'R', 6,
    'U', 1,
    'L', 3,
    'R', 4,
    'U', 3,
    'L', 6,
    'R', 1,
    'D', 3,
    'R', 4,
    'D', 3,
    'L', 1,
    'U', 1,
    'D', 3,
    'R', 2,
    'L', 4,
    'U', 2,
    'L', 2,
    'U', 4,
    'D', 3,
    'L', 5,
    'D', 4,
    'L', 4,
    'R', 2,
    'D', 4,
    'L', 2,
    'R', 5,
    'U', 3,
    'D', 2,
    'L', 1,
    'R', 5,
    'D', 1,
    'U', 1,
    'R', 6,
    'L', 1,
    'U', 4,
    'D', 2,
    'R', 4,
    'D', 5,
    'R', 3,
    'U', 5,
    'D', 1,
    'R', 1,
    'D', 1,
    'U', 6,
    'R', 3,
    'U', 6,
    'L', 3,
    'R', 6,
    'D', 1,
    'U', 1,
    'D', 4,
    'U', 1,
    'R', 1,
    'D', 2,
    'U', 5,
    'L', 5,
    'U', 1,
    'L', 5,
    'R', 5,
    'U', 3,
    'R', 5,
    'U', 4,
    'L', 4,
    'U', 3,
    'D', 5,
    'R', 6,
    'L', 1,
    'U', 3,
    'R', 6,
    'L', 1,
    'U', 6,
    'R', 1,
    'L', 1,
    'D', 3,
    'L', 5,
    'R', 6,
    'U', 2,
    'R', 5,
    'U', 5,
    'D', 5,
    'R', 3,
    'U', 2,
    'L', 6,
    'D', 5,
    'L', 4,
    'U', 5,
    'D', 3,
    'U', 4,
    'R', 3,
    'D', 6,
    'U', 4,
    'R', 4,
    'U', 5,
    'L', 3,
    'U', 5,
    'R', 4,
    'L', 4,
    'U', 3,
    'L', 1,
    'R', 6,
    'L', 4,
    'U', 6,
    'D', 1,
    'R', 4,
    'U', 4,
    'L', 5,
    'U', 3,
    'D', 6,
    'L', 3,
    'U', 1,
    'L', 3,
    'R', 5,
    'L', 5,
    'R', 7,
    'D', 3,
    'L', 4,
    'R', 7,
    'U', 1,
    'D', 2,
    'R', 7,
    'U', 6,
    'L', 2,
    'D', 7,
    'L', 4,
    'U', 4,
    'L', 7,
    'D', 4,
    'R', 7,
    'D', 1,
    'U', 7,
    'R', 4,
    'D', 7,
    'U', 4,
    'D', 4,
    'R', 3,
    'L', 4,
    'U', 3,
    'L', 6,
    'D', 4,
    'U', 1,
    'R', 1,
    'U', 1,
    'L', 7,
    'D', 1,
    'U', 3,
    'L', 3,
    'R', 5,
    'U', 6,
    'R', 5,
    'U', 5,
    'L', 1,
    'U', 5,
    'R', 7,
    'D', 1,
    'L', 6,
    'R', 2,
    'L', 5,
    'U', 3,
    'D', 2,
    'U', 1,
    'L', 2,
    'R', 7,
    'U', 3,
    'D', 6,
    'U', 3,
    'D', 7,
    'U', 2,
    'D', 1,
    'U', 5,
    'D', 2,
    'L', 2,
    'U', 5,
    'R', 1,
    'D', 5,
    'U', 6,
    'D', 5,
    'U', 5,
    'L', 1,
    'R', 7,
    'L', 4,
    'U', 3,
    'L', 7,
    'R', 2,
    'L', 7,
    'R', 5,
    'D', 3,
    'L', 5,
    'R', 2,
    'U', 6,
    'L', 3,
    'D', 6,
    'U', 5,
    'L', 1,
    'D', 7,
    'U', 3,
    'L', 2,
    'U', 7,
    'D', 7,
    'R', 2,
    'L', 1,
    'U', 7,
    'L', 1,
    'U', 3,
    'R', 6,
    'D', 6,
    'R', 6,
    'D', 7,
    'L', 5,
    'D', 4,
    'U', 4,
    'D', 5,
    'R', 5,
    'D', 2,
    'R', 7,
    'L', 4,
    'U', 7,
    'R', 2,
    'U', 3,
    'L', 2,
    'R', 6,
    'U', 8,
    'R', 6,
    'D', 6,
    'L', 7,
    'D', 6,
    'L', 1,
    'D', 4,
    'U', 1,
    'D', 8,
    'U', 8,
    'L', 5,
    'R', 8,
    'D', 1,
    'R', 6,
    'U', 5,
    'R', 3,
    'L', 4,
    'D', 5,
    'L', 2,
    'D', 8,
    'U', 3,
    'L', 7,
    'U', 4,
    'D', 8,
    'R', 6,
    'U', 4,
    'L', 7,
    'D', 8,
    'L', 3,
    'U', 7,
    'R', 1,
    'U', 2,
    'R', 5,
    'D', 2,
    'R', 2,
    'U', 6,
    'D', 1,
    'R', 6,
    'L', 8,
    'U', 5,
    'R', 7,
    'U', 1,
    'R', 5,
    'L', 7,
    'D', 4,
    'L', 7,
    'U', 8,
    'L', 8,
    'R', 4,
    'L', 1,
    'D', 6,
    'L', 6,
    'U', 7,
    'L', 5,
    'D', 1,
    'U', 3,
    'R', 8,
    'D', 2,
    'R', 3,
    'L', 7,
    'U', 5,
    'R', 6,
    'L', 2,
    'D', 2,
    'R', 5,
    'L', 4,
    'D', 1,
    'U', 4,
    'L', 4,
    'R', 7,
    'U', 6,
    'D', 7,
    'R', 1,
    'L', 8,
    'D', 3,
    'L', 7,
    'U', 3,
    'R', 3,
    'U', 1,
    'D', 7,
    'R', 7,
    'L', 7,
    'U', 7,
    'L', 5,
    'D', 1,
    'R', 8,
    'U', 3,
    'D', 1,
    'U', 6,
    'R', 7,
    'D', 6,
    'L', 3,
    'D', 5,
    'R', 8,
    'L', 1,
    'U', 3,
    'R', 2,
    'U', 1,
    'R', 2,
    'D', 5,
    'R', 4,
    'L', 1,
    'D', 4,
    'U', 5,
    'R', 8,
    'U', 2,
    'L', 4,
    'R', 6,
    'D', 1,
    'U', 7,
    'D', 8,
    'R', 1,
    'L', 1,
    'U', 4,
    'L', 2,
    'U', 7,
    'D', 2,
    'R', 7,
    'D', 9,
    'U', 7,
    'L', 1,
    'D', 8,
    'R', 3,
    'L', 1,
    'R', 3,
    'U', 5,
    'L', 5,
    'D', 7,
    'U', 3,
    'R', 4,
    'U', 5,
    'L', 2,
    'R', 2,
    'D', 7,
    'R', 2,
    'U', 4,
    'L', 9,
    'R', 7,
    'U', 6,
    'R', 4,
    'U', 8,
    'L', 2,
    'R', 7,
    'U', 5,
    'L', 6,
    'R', 7,
    'U', 7,
    'L', 4,
    'D', 2,
    'L', 1,
    'D', 4,
    'R', 5,
    'U', 2,
    'L', 3,
    'R', 9,
    'U', 8,
    'D', 5,
    'L', 3,
    'U', 1,
    'L', 2,
    'D', 5,
    'L', 7,
    'D', 7,
    'U', 1,
    'L', 2,
    'D', 8,
    'R', 9,
    'L', 5,
    'D', 8,
    'U', 1,
    'L', 7,
    'U', 9,
    'R', 1,
    'L', 1,
    'D', 3,
    'R', 3,
    'U', 6,
    'L', 4,
    'R', 6,
    'L', 1,
    'R', 6,
    'U', 2,
    'R', 9,
    'D', 3,
    'R', 6,
    'U', 5,
    'R', 9,
    'L', 7,
    'D', 6,
    'L', 9,
    'D', 8,
    'R', 4,
    'L', 3,
    'U', 2,
    'R', 7,
    'L', 5,
    'D', 7,
    'U', 8,
    'R', 5,
    'L', 2,
    'D', 8,
    'L', 4,
    'R', 3,
    'D', 1,
    'U', 3,
    'D', 3,
    'U', 3,
    'D', 3,
    'R', 2,
    'L', 5,
    'R', 9,
    'L', 5,
    'U', 9,
    'R', 3,
    'D', 9,
    'L', 4,
    'U', 3,
    'L', 2,
    'R', 1,
    'D', 1,
    'R', 6,
    'D', 4,
    'L', 6,
    'R', 1,
    'D', 8,
    'L', 3,
    'R', 2,
    'D', 7,
    'U', 2,
    'L', 4,
    'R', 10,
    'L', 9,
    'R', 4,
    'L', 2,
    'U', 10,
    'R', 5,
    'D', 4,
    'L', 7,
    'U', 5,
    'L', 7,
    'U', 7,
    'D', 6,
    'U', 7,
    'R', 5,
    'L', 5,
    'D', 5,
    'R', 10,
    'D', 4,
    'L', 3,
    'D', 4,
    'U', 8,
    'L', 5,
    'U', 5,
    'L', 8,
    'R', 3,
    'U', 5,
    'D', 6,
    'L', 2,
    'R', 1,
    'L', 7,
    'U', 8,
    'R', 2,
    'L', 5,
    'R', 1,
    'D', 2,
    'U', 1,
    'L', 1,
    'R', 5,
    'U', 6,
    'D', 6,
    'R', 2,
    'U', 8,
    'L', 1,
    'D', 8,
    'L', 5,
    'R', 10,
    'U', 7,
    'R', 9,
    'D', 4,
    'L', 4,
    'U', 6,
    'D', 3,
    'R', 3,
    'L', 5,
    'R', 3,
    'U', 6,
    'R', 10,
    'U', 5,
    'L', 6,
    'R', 2,
    'D', 9,
    'U', 2,
    'D', 4,
    'U', 3,
    'D', 2,
    'U', 7,
    'L', 1,
    'R', 3,
    'L', 10,
    'U', 7,
    'R', 7,
    'U', 2,
    'R', 5,
    'L', 3,
    'D', 4,
    'R', 1,
    'D', 3,
    'L', 3,
    'R', 6,
    'D', 6,
    'R', 3,
    'L', 9,
    'R', 3,
    'L', 1,
    'D', 8,
    'R', 9,
    'U', 2,
    'D', 6,
    'U', 2,
    'L', 9,
    'U', 8,
    'D', 2,
    'L', 1,
    'U', 2,
    'D', 10,
    'U', 7,
    'R', 8,
    'D', 4,
    'L', 7,
    'U', 1,
    'D', 1,
    'U', 1,
    'L', 5,
    'D', 5,
    'L', 10,
    'R', 9,
    'U', 5,
    'L', 8,
    'D', 2,
    'R', 2,
    'L', 8,
    'D', 8,
    'L', 11,
    'U', 5,
    'L', 11,
    'D', 9,
    'L', 10,
    'U', 1,
    'D', 9,
    'R', 5,
    'U', 4,
    'D', 2,
    'R', 3,
    'L', 7,
    'D', 7,
    'L', 9,
    'R', 3,
    'L', 3,
    'U', 7,
    'R', 1,
    'U', 4,
    'R', 7,
    'D', 10,
    'L', 8,
    'U', 2,
    'L', 6,
    'R', 1,
    'U', 10,
    'D', 3,
    'U', 2,
    'L', 4,
    'D', 5,
    'R', 6,
    'L', 7,
    'R', 8,
    'L', 4,
    'U', 1,
    'D', 11,
    'U', 5,
    'R', 4,
    'L', 9,
    'R', 8,
    'L', 2,
    'R', 4,
    'U', 10,
    'D', 4,
    'R', 7,
    'D', 3,
    'U', 6,
    'D', 6,
    'U', 3,
    'L', 11,
    'R', 4,
    'D', 6,
    'U', 9,
    'R', 10,
    'D', 8,
    'U', 3,
    'R', 2,
    'U', 7,
    'D', 5,
    'R', 10,
    'U', 5,
    'R', 3,
    'U', 9,
    'L', 2,
    'D', 3,
    'U', 1,
    'L', 10,
    'U', 2,
    'L', 3,
    'U', 10,
    'L', 6,
    'D', 4,
    'L', 1,
    'D', 1,
    'U', 3,
    'L', 10,
    'R', 6,
    'L', 1,
    'U', 2,
    'R', 1,
    'L', 9,
    'D', 4,
    'L', 11,
    'U', 6,
    'D', 3,
    'L', 9,
    'U', 7,
    'D', 3,
    'U', 3,
    'R', 8,
    'U', 11,
    'R', 2,
    'D', 1,
    'U', 3,
    'R', 2,
    'L', 7,
    'D', 5,
    'R', 10,
    'U', 1,
    'D', 10,
    'L', 1,
    'U', 10,
    'D', 11,
    'U', 5,
    'R', 6,
    'D', 6,
    'R', 10,
    'L', 9,
    'D', 3,
    'U', 4,
    'L', 12,
    'D', 7,
    'R', 9,
    'U', 4,
    'D', 10,
    'L', 11,
    'U', 1,
    'R', 3,
    'U', 6,
    'L', 11,
    'U', 10,
    'R', 3,
    'U', 4,
    'L', 9,
    'U', 4,
    'L', 12,
    'U', 4,
    'D', 2,
    'L', 12,
    'D', 12,
    'L', 5,
    'U', 9,
    'R', 7,
    'D', 12,
    'L', 2,
    'U', 3,
    'R', 7,
    'D', 9,
    'L', 2,
    'R', 9,
    'D', 10,
    'U', 6,
    'R', 10,
    'D', 8,
    'R', 8,
    'L', 9,
    'U', 11,
    'R', 5,
    'D', 7,
    'U', 3,
    'R', 7,
    'U', 10,
    'R', 5,
    'D', 4,
    'U', 3,
    'D', 6,
    'R', 11,
    'U', 9,
    'L', 3,
    'D', 5,
    'R', 6,
    'L', 11,
    'D', 5,
    'R', 2,
    'D', 2,
    'R', 8,
    'D', 1,
    'U', 5,
    'L', 3,
    'U', 8,
    'L', 10,
    'D', 7,
    'R', 12,
    'D', 7,
    'L', 8,
    'D', 5,
    'U', 9,
    'D', 10,
    'L', 4,
    'R', 6,
    'L', 9,
    'R', 10,
    'L', 11,
    'U', 8,
    'D', 8,
    'R', 2,
    'L', 5,
    'U', 9,
    'R', 1,
    'L', 12,
    'D', 6,
    'R', 11,
    'L', 4,
    'R', 6,
    'U', 12,
    'D', 5,
    'U', 4,
    'L', 7,
    'D', 2,
    'R', 5,
    'U', 5,
    'D', 7,
    'R', 10,
    'L', 9,
    'U', 4,
    'D', 11,
    'U', 12,
    'D', 6,
    'U', 4,
    'L', 3,
    'U', 4,
    'R', 11,
    'D', 7,
    'L', 11,
    'R', 9,
    'U', 2,
    'R', 7,
    'D', 5,
    'U', 13,
    'L', 10,
    'U', 9,
    'L', 9,
    'U', 4,
    'D', 8,
    'R', 7,
    'L', 8,
    'U', 3,
    'L', 1,
    'U', 6,
    'D', 11,
    'U', 11,
    'D', 12,
    'L', 13,
    'U', 13,
    'R', 8,
    'D', 4,
    'U', 6,
    'D', 3,
    'U', 9,
    'R', 11,
    'D', 6,
    'R', 9,
    'D', 1,
    'U', 8,
    'D', 9,
    'R', 2,
    'U', 3,
    'R', 13,
    'D', 7,
    'U', 6,
    'D', 10,
    'U', 13,
    'D', 4,
    'U', 1,
    'R', 10,
    'D', 9,
    'U', 8,
    'D', 7,
    'U', 7,
    'L', 13,
    'R', 10,
    'L', 8,
    'D', 7,
    'U', 9,
    'R', 8,
    'L', 8,
    'U', 3,
    'D', 5,
    'L', 1,
    'U', 5,
    'D', 9,
    'R', 2,
    'D', 8,
    'L', 7,
    'U', 2,
    'R', 11,
    'U', 9,
    'D', 7,
    'L', 2,
    'D', 9,
    'R', 8,
    'L', 12,
    'R', 4,
    'D', 7,
    'U', 2,
    'L', 8,
    'U', 12,
    'D', 11,
    'R', 9,
    'U', 9,
    'R', 13,
    'U', 3,
    'L', 9,
    'U', 9,
    'R', 5,
    'U', 10,
    'R', 13,
    'U', 6,
    'D', 4,
    'U', 2,
    'R', 7,
    'D', 3,
    'R', 1,
    'L', 4,
    'R', 9,
    'L', 3,
    'D', 6,
    'L', 9,
    'R', 6,
    'D', 1,
    'L', 6,
    'D', 5,
    'U', 10,
    'R', 2,
    'L', 1,
    'R', 1,
    'L', 1,
    'U', 9,
    'D', 5,
    'U', 2,
    'D', 12,
    'L', 9,
    'U', 1,
    'L', 14,
    'U', 9,
    'L', 11,
    'R', 11,
    'L', 3,
    'D', 5,
    'U', 5,
    'D', 8,
    'L', 9,
    'U', 12,
    'R', 11,
    'L', 1,
    'D', 9,
    'R', 9,
    'L', 7,
    'D', 7,
    'U', 4,
    'D', 5,
    'L', 11,
    'D', 9,
    'R', 13,
    'D', 3,
    'R', 9,
    'D', 6,
    'U', 12,
    'L', 2,
    'D', 10,
    'L', 6,
    'U', 12,
    'R', 2,
    'D', 9,
    'R', 2,
    'D', 12,
    'R', 14,
    'U', 3,
    'R', 3,
    'D', 12,
    'R', 13,
    'U', 1,
    'D', 11,
    'L', 1,
    'D', 9,
    'U', 11,
    'R', 9,
    'D', 10,
    'L', 7,
    'D', 13,
    'R', 10,
    'D', 2,
    'U', 7,
    'L', 7,
    'R', 14,
    'D', 10,
    'R', 9,
    'D', 13,
    'L', 7,
    'U', 5,
    'R', 4,
    'D', 4,
    'R', 3,
    'U', 8,
    'D', 8,
    'R', 4,
    'U', 14,
    'R', 8,
    'U', 12,
    'D', 6,
    'L', 11,
    'D', 12,
    'U', 13,
    'L', 13,
    'U', 8,
    'L', 2,
    'R', 7,
    'U', 1,
    'L', 14,
    'R', 1,
    'D', 1,
    'L', 9,
    'U', 1,
    'R', 8,
    'U', 7,
    'D', 13,
    'U', 1,
    'D', 5,
    'L', 8,
    'R', 13,
    'L', 1,
    'U', 14,
    'L', 11,
    'D', 7,
    'R', 7,
    'L', 8,
    'U', 8,
    'D', 9,
    'U', 14,
    'L', 1,
    'U', 7,
    'D', 7,
    'L', 12,
    'D', 7,
    'L', 4,
    'U', 14,
    'R', 2,
    'D', 3,
    'U', 9,
    'L', 9,
    'D', 13,
    'U', 9,
    'D', 5,
    'U', 11,
    'D', 6,
    'U', 10,
    'L', 10,
    'R', 8,
    'D', 11,
    'L', 3,
    'R', 6,
    'D', 10,
    'R', 11,
    'L', 3,
    'D', 15,
    'R', 6,
    'D', 12,
    'U', 4,
    'R', 5,
    'L', 15,
    'D', 9,
    'L', 5,
    'U', 12,
    'R', 2,
    'D', 14,
    'U', 10,
    'L', 1,
    'U', 14,
    'L', 5,
    'D', 12,
    'U', 11,
    'D', 6,
    'L', 12,
    'R', 2,
    'D', 9,
    'L', 15,
    'D', 6,
    'L', 3,
    'U', 6,
    'L', 8,
    'R', 6,
    'L', 11,
    'U', 12,
    'L', 2,
    'R', 12,
    'U', 15,
    'D', 15,
    'U', 1,
    'L', 4,
    'R', 3,
    'D', 9,
    'U', 9,
    'D', 2,
    'U', 2,
    'R', 6,
    'U', 1,
    'L', 4,
    'R', 5,
    'L', 8,
    'R', 2,
    'U', 6,
    'D', 13,
    'R', 12,
    'L', 13,
    'D', 3,
    'L', 9,
    'U', 5,
    'R', 5,
    'D', 3,
    'R', 8,
    'L', 7,
    'R', 12,
    'L', 11,
    'U', 9,
    'L', 4,
    'D', 9,
    'U', 13,
    'R', 15,
    'D', 13,
    'U', 12,
    'R', 1,
    'L', 14,
    'R', 5,
    'L', 8,
    'U', 6,
    'D', 5,
    'U', 6,
    'D', 7,
    'U', 14,
    'D', 4,
    'R', 6,
    'L', 7,
    'U', 4,
    'L', 12,
    'D', 7,
    'U', 11,
    'L', 3,
    'R', 4,
    'U', 4,
    'L', 9,
    'U', 10,
    'R', 9,
    'D', 15,
    'R', 9,
    'D', 6,
    'L', 4,
    'U', 2,
    'L', 5,
    'R', 9,
    'L', 8,
    'R', 2,
    'D', 5,
    'U', 8,
    'D', 11,
    'L', 10,
    'R', 1,
    'U', 10,
    'L', 10,
    'U', 8,
    'L', 8,
    'R', 16,
    'U', 9,
    'D', 5,
    'L', 8,
    'D', 3,
    'L', 5,
    'R', 3,
    'U', 7,
    'R', 9,
    'U', 3,
    'D', 5,
    'U', 11,
    'R', 5,
    'L', 7,
    'D', 3,
    'R', 15,
    'U', 8,
    'R', 12,
    'U', 1,
    'D', 1,
    'R', 12,
    'L', 15,
    'D', 5,
    'R', 5,
    'U', 12,
    'R', 11,
    'L', 7,
    'U', 13,
    'L', 9,
    'R', 14,
    'U', 13,
    'D', 15,
    'R', 15,
    'D', 9,
    'U', 3,
    'L', 15,
    'D', 15,
    'U', 8,
    'L', 2,
    'U', 4,
    'D', 5,
    'L', 10,
    'R', 5,
    'D', 15,
    'U', 15,
    'L', 11,
    'U', 7,
    'L', 3,
    'D', 6,
    'L', 9,
    'D', 9,
    'U', 11,
    'L', 9,
    'U', 2,
    'R', 14,
    'L', 13,
    'U', 8,
    'D', 13,
    'R', 5,
    'U', 5,
    'L', 5,
    'U', 15,
    'D', 8,
    'U', 15,
    'R', 3,
    'U', 12,
    'L', 3,
    'D', 9,
    'U', 12,
    'D', 10,
    'R', 6,
    'L', 16,
    'D', 14,
    'L', 10,
    'R', 11,
    'U', 9,
    'R', 3,
    'U', 15,
    'L', 10,
    'U', 14,
    'L', 1,
    'D', 13,
    'R', 4,
    'U', 8,
    'R', 10,
    'D', 2,
    'U', 1,
    'L', 2,
    'D', 9,
    'R', 10,
    'L', 15,
    'D', 7,
    'R', 5,
    'D', 12,
    'L', 1,
    'R', 8,
    'D', 14,
    'U', 4,
    'D', 11,
    'R', 12,
    'L', 3,
    'D', 6,
    'U', 6,
    'D', 12,
    'L', 15,
    'U', 4,
    'L', 3,
    'R', 10,
    'L', 9,
    'D', 5,
    'R', 17,
    'U', 12,
    'R', 2,
    'L', 2,
    'D', 15,
    'U', 4,
    'R', 4,
    'L', 17,
    'R', 8,
    'U', 12,
    'R', 1,
    'L', 3,
    'D', 1,
    'R', 7,
    'L', 13,
    'U', 14,
    'D', 1,
    'U', 5,
    'L', 2,
    'R', 5,
    'L', 9,
    'U', 6,
    'D', 5,
    'R', 14,
    'U', 11,
    'D', 7,
    'L', 10,
    'D', 10,
    'L', 17,
    'R', 2,
    'U', 9,
    'D', 7,
    'L', 15,
    'R', 8,
    'D', 16,
    'L', 15,
    'D', 8,
    'L', 4,
    'U', 4,
    'D', 5,
    'R', 4,
    'D', 15,
    'L', 8,
    'D', 11,
    'L', 5,
    'U', 5,
    'D', 4,
    'R', 14,
    'U', 16,
    'R', 8,
    'L', 2,
    'R', 16,
    'L', 5,
    'U', 15,
    'D', 13,
    'L', 5,
    'U', 5,
    'D', 6,
    'R', 1,
    'L', 4,
    'R', 4,
    'U', 6,
    'D', 11,
    'L', 8,
    'R', 9,
    'U', 8,
    'R', 10,
    'U', 1,
    'L', 13,
    'R', 10,
    'L', 8,
    'D', 11,
    'U', 9,
    'L', 7,
    'U', 5,
    'L', 15,
    'D', 5,
    'R', 3,
    'D', 16,
    'L', 2,
    'U', 12,
    'R', 15,
    'U', 9,
    'L', 13,
    'U', 15,
    'L', 4,
    'U', 3,
    'R', 3,
    'L', 13,
    'D', 5,
    'U', 16,
    'R', 5,
    'D', 5,
    'U', 9,
    'L', 7,
    'U', 10,
    'D', 1,
    'R', 2,
    'U', 14,
    'L', 13,
    'U', 1,
    'L', 12,
    'U', 10,
    'D', 3,
    'U', 1,
    'R', 14,
    'D', 14,
    'U', 16,
    'R', 6,
    'U', 14,
    'D', 5,
    'L', 18,
    'D', 18,
    'U', 8,
    'L', 2,
    'R', 5,
    'D', 17,
    'U', 18,
    'R', 2,
    'L', 10,
    'D', 6,
    'R', 17,
    'L', 10,
    'U', 1,
    'R', 8,
    'L', 14,
    'U', 10,
    'R', 7,
    'L', 16,
    'U', 9,
    'D', 13,
    'U', 2,
    'L', 1,
    'D', 14,
    'U', 15,
    'R', 15,
    'D', 2,
    'R', 13,
    'D', 3,
    'R', 9,
    'D', 18,
    'R', 16,
    'L', 1,
    'R', 3,
    'U', 1,
    'R', 1,
    'U', 16,
    'D', 17,
    'U', 1,
    'D', 11,
    'R', 11,
    'D', 1,
    'U', 5,
    'R', 1,
    'L', 1,
    'R', 10,
    'D', 5,
    'R', 1,
    'D', 15,
    'R', 14,
    'L', 5,
    'U', 12,
    'L', 8,
    'R', 6,
    'D', 8,
    'L', 5,
    'D', 11,
    'L', 14,
    'D', 5,
    'R', 15,
    'L', 16,
    'R', 12,
    'L', 10,
    'D', 8,
    'L', 3,
    'R', 1,
    'D', 10,
    'U', 13,
    'D', 7,
    'U', 10,
    'L', 13,
    'D', 8,
    'R', 7,
    'L', 13,
    'R', 4,
    'L', 9,
    'U', 6,
    'D', 14,
    'L', 16,
    'D', 18,
    'R', 13,
    'U', 13,
    'L', 17,
    'R', 5,
    'U', 9,
    'R', 11,
    'D', 18,
    'R', 16,
    'L', 4,
    'D', 8,
    'R', 18,
    'L', 14,
    'R', 11,
    'D', 14,
    'R', 2,
    'D', 6,
    'L', 12,
    'D', 3,
    'U', 3,
    'L', 4,
    'D', 7,
    'L', 4,
    'D', 6,
    'L', 12,
    'D', 9,
    'L', 2,
    'R', 16,
    'L', 12,
    'U', 4,
    'L', 12,
    'U', 4,
    'R', 17,
    'L', 8,
    'U', 8,
    'R', 11,
    'U', 14,
    'D', 15,
    'L', 19,
    'R', 1,
    'L', 16,
    'R', 3,
    'U', 15,
    'R', 5,
    'L', 1,
    'D', 17,
    'L', 13,
    'U', 14,
    'D', 9,
    'U', 3,
    'L', 7,
    'R', 11,
    'D', 7,
    'R', 15,
    'L', 6,
    'U', 17,
    'R', 17,
    'D', 17,
    'U', 18,
    'L', 1,
    'R', 8,
    'L', 7,
    'D', 9,
    'L', 5,
    'D', 1,
    'R', 2,
    'D', 16,
    'U', 18,
    'D', 7,
    'U', 13,
    'L', 10,
    'U', 15,
    'R', 18,
    'U', 7,
    'L', 9,
    'R', 6,
    'U', 18,
    'R', 9,
    'D', 8,
    'L', 6,
    'R', 7,
    'L', 11,
    'U', 12,
    'R', 7,
    'D', 4,
    'U', 8,
    'R', 16,
    'U', 17,
    'D', 4,
    'U', 10,
    'L', 19,
    'D', 14,
    'L', 12,
    'R', 18,
    'D', 4,
    'R', 9,
    'U', 12,
    'R', 14,
    'U', 9,
    'L', 16,
    'D', 14,
    'U', 7,
    'R', 14,
    'L', 19,
    'U', 16,
    'L', 18,
    'U', 1,
    'R', 19,
    'D', 7,
    'R', 6,
    'U', 12,
    'L', 16,
    'R', 16,
    'U', 16,
    'L', 6,
    'R', 18,
    'L', 19,
    'U', 10,
    'D', 15,
    'U', 7,
    'D', 1,
    'U', 7,
    'L', 12,
    'U', 4,
    'R', 5,
    'U', 12,
    'R', 18,
    'D', 15,
    'U', 4,
    'L', 8,
    'U', 18,
    'D', 18,
    'L', 3,
    'R', 19,
    'L', 15,
    'R', 11,
    'U', 1,
    'R', 6,
    'L', 8,
    'R', 1,
    'L', 3,
];

function getChain(emu) {
    let head = symtab.HEAD.org;
    let tail = symtab.TAIL.org;
    let points = symtab.POINTS.org;
    let ptrs = [head, points, points+2, points+4, points+6, points+8, points+10, points+12, points+14, tail];
    let result = [];

    for (let ptr of ptrs) {
        px = emu.mem[ptr] << 24 >> 24;
        py = emu.mem[ptr + 1] << 24 >> 24;
        result.push([px, py]);
    }

    return result;
}

compiled.then((fns) => {
    let hex8 = function(v) {
        let result = '00' + Number(v).toString(16);
        return result.substring(result.length - 2);
    };

    // find symbols
    let record = symtab.RECORD.org;
    let head = symtab.HEAD.org;
    let tail = symtab.TAIL.org;
    let points = symtab.POINTS.org;

    let step = function(emu, ctx, xs, ys, path, multi, chaining) {
        let state = emu.cpu.getState();
        let cycles = 0;

        // if multi then execute until 10k cycles every time
        do {

            // execute the Z80 emulator until:
            //  1. 10,000 cycles has elapsed; or
            //  2. the RECORD method breakpoint is reached; or
            //  3. the emulator is halted.
            window.before = getChain(emu);
            do {
                cycles += emu.cpu.run_instruction();
                state = emu.cpu.getState();
            } while (cycles < 10000 && state.pc !== record && !state.halted);

            // record the tail's position if the RECORD method was reached
            if (state.pc === record) {
                let tx = (emu.mem[tail] << 24 >> 24) * xs + 128;
                let ty = (emu.mem[tail+1] << 24 >> 24) * ys + 128;
                path.push({x: tx, y: ty});
            }

        } while (multi && cycles < 10000 && !state.halted);

        ctx.fillStyle = "white";
        ctx.fillRect(0, 0, 256, 256);

        // draw the tail's history
        ctx.fillStyle = "darkgrey";
        for (let pt of path) {
            ctx.fillRect(pt.x, pt.y, xs, ys);
        }

        let hx = (emu.mem[head] << 24 >> 24) * xs + 128;
        let hy = (emu.mem[head+1] << 24 >> 24) * ys + 128;
        let tx = (emu.mem[tail] << 24 >> 24) * xs + 128;
        let ty = (emu.mem[tail+1] << 24 >> 24) * ys + 128;

        // draw the tail
        ctx.fillStyle = "green";
        ctx.fillRect(tx+xs/4, ty+ys/4, xs/2, ys/2);

        // if chaining, draw the chained points
        if (chaining) {
            colors = ['#ea3c00', '#d35300', '#ba6300', '#a16e00', '#887500', '#6f7b00', '#547e00', '#377f00'];
            for (let i = 0; i < 8; i++) {
                ctx.fillStyle = colors[i];
                let cx = (emu.mem[points + i*2] << 24 >> 24) * xs + 128;
                let cy = (emu.mem[points + i*2 + 1] << 24 >> 24) * ys + 128;
                ctx.fillRect(cx + xs/4, cy + ys/4, xs/2, ys/2);
            }
        }

        // draw the head
        ctx.fillStyle = "red";
        ctx.fillRect(hx+xs/4, hy+ys/4, xs/2, ys/2);

        if (!state.halted) {
            window.setTimeout(() => step(emu, ctx, xs, ys, path, multi, chaining), 10);
        } else {
            let visited = new Set();
            for (let pt of path) {
                visited.add(pt.x * 256 + pt.y);
            }
            console.log('Unique tail locations: ' + visited.size);
            emu.elem.disabled = false;
        }
    };

    // find the "runner" buttons and attach event handlers
    $("button.runner").click((evt) => {
        let emu = mkemulator();

        // load the input into zmem
        let idx = 0x1000;
        for (let i of input) {
            if (typeof i === 'string') {
                emu.mem[idx++] = i.charCodeAt(0);
            } else {
                emu.mem[idx++] = i;
            }
        }
        emu.mem[idx] = 0;

        let scale = $(evt.target).attr('data-scale');
        let target = $(evt.target).attr('data-target');
        let org = $(evt.target).attr('data-org');
        let multi = $(evt.target).attr('data-multi') !== undefined;
        let chaining = $(evt.target).attr('data-chain') !== undefined;

        if (org !== undefined) {
            let state = emu.cpu.getState();
            state.pc = symtab[org].org;
            emu.cpu.setState(state);
        }
        let ctx = $("canvas#" + target).get(0).getContext('2d');
        emu.elem = evt.delegateTarget;
        emu.elem.disabled = true;
        window.requestAnimationFrame(() => step(emu, ctx, 256/scale, 256/scale, [], multi, chaining));
    });

    let stepping = {
        element: undefined,
        scale: undefined,
        target: undefined,
        org: undefined,
        multi: undefined,
        chaining: undefined,
        ctx: undefined,
    }

    // find the "stepper" buttons and attach event handlers
    $("button.stepper").on('click', (evt) => {
        if (stepping.element !== evt.delegateTarget) {
            stepping.element = evt.delegateTarget;
            reset();
            stepping.scale = $(evt.target).attr('data-scale');
            stepping.target = $(evt.target).attr('data-target');
            stepping.org = $(evt.target).attr('data-org');
            stepping.multi = $(evt.target).attr('data-multi') !== undefined;
            stepping.chaining = $(evt.target).attr('data-chain') !== undefined;

            if (stepping.org !== undefined) {
                let state = z80.getState();
                state.pc = symtab[stepping.org].org;
                z80.setState(state);
            }
            stepping.ctx = $("canvas#" + stepping.target).get(0).getContext('2d');
        }

        let state = z80.getState();
        let pc = state.pc;
        do {
            fns.step();
            state = z80.getState();
            if (state.pc !== pc || state.halted) break;
        } while (1);
        fns.trace();

        if (state.pc === record) {
            let tx = (zmem[tail] << 24 >> 24) * xs + 128;
            let ty = (zmem[tail+1] << 24 >> 24) * ys + 128;
            console.log({x: tx, y: ty});
            //path.push({x: tx, y: ty});
        }
    });


});
